---
title: "Read delimiters"
---

Although there are specific functions for some delimiters this webpage will show you how to read in data with any delimiter using `readr::read_delim()` and the `delim=` option.

The most common types of delimiters for rectangular data files are:

- Commas (`,`): Files with commas as delimiters are known as CSV files (Comma Separated Values) and commonly end with the suffix __.csv__.
- Tabs (`\t`): Files with tabs as delimiters are known as TSV files (Tab Separated Values) and commonly end with the suffix __.tsv__.
- Spaces (` `): Spaces are used as delimiters for many files but are generally not recommended in data science.

Additionally, non-standard delimiters can be specified. Tilde (`~`), Colon (`:`), Semi-colon (`;`), Pipe (`|`) are commonly used as non-standard delimiters. 

## CSV

We'll read in the file [all_plant_details.csv](https://neof-workshops.github.io/Tidyverse/data/all_plant_details.csv) into R as a tibble.

### CSV file contents

Prior to reading in the CSV file (comma separated value) first print out the first five lines of the file with the base R function `readLines()`. 
This shows the contents of the file with the delimiters, in this case commas (`,`).
This step is for demonstration and can be skipped in your own analyses if you know the delimiter of your file.

```{r}
readLines("https://neof-workshops.github.io/Tidyverse/data/all_plant_details.csv", n=5)
```

### Read in CSV file

Read in the CSV file with `readr::read_delim()` setting the delimiter to commas with `delim = ","`.

__Note:__ You can ignore the first 2 lines beginning with __â„¹__. They are discussed in the [column types page](/readr/column_types.qmd).

```{r}
readr::read_delim(
    file = "https://neof-workshops.github.io/Tidyverse/data/all_plant_details.csv",
    delim = ",") |>
    #Slice out the first 5 lines
    dplyr::slice(1:5)
```

## TSV

We'll read in the file [all_plant_details.csv](https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.tsv) into R as a tibble.
This tab delimited file was created with the [`readr::write_delim()`](/readr/write_delimiters.qmd#tab-delimited) and only contains the header line plus the first 5 rows of the __all_plant_details.csv__ file.

### TSV file contents

View the file contents before reading it as a __tibble__.

If you were to open the file in a text editor it would most likely display the `\t` characters as tab spaces.

```{r}
readLines("https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.tsv")
```

### Read in TSV file

Read in the TSV file with `readr::read_delim()` setting the delimiter to commas with `delim = "\t"`.

Additionally, we'll specify the option `show_col_types = FALSE` to quiet the column types message (more info covered in the [column types page](/readr/column_types.qmd)).

```{r}
readr::read_delim(
    file = "https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.tsv",
    delim = "\t", 
    show_col_types = FALSE)
```

## Space

We'll read in the file [all_plant_details.txt](https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.txt) into R as a tibble.
This space delimited file was created with the [`readr::write_delim()`](/readr/write_delimiters.qmd#space-delimited) and only contains the header line plus the first 5 rows of the __all_plant_details.csv__ file.

### Space delimited file contents

View the file contents before reading it as a __tibble__.

You will notice the 6th line has __\"Jacob's coat\"__. As this value has a space the `\"` are used to indicate that __Jacob's coat__ is the value within one field. 

```{r}
readLines("https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.txt")
```

### Read in space delimited file file

Read in the space delimited file with `readr::read_delim()` setting the delimiter to commas with `delim = " "`.

Additionally, we'll specify the option `show_col_types = FALSE` to quiet the column types message (more info covered in the [column types page](/readr/column_types.qmd)).

```{r}
readr::read_delim(
    file = "https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.txt",
    delim = " ", 
    show_col_types = FALSE)
```

## Non-standard delimiter

You can use many other characters as delimiters when reading files.
This can be useful if the data contains the three common delimiters (comm, tab, and space).

The most common non-standard delimiters are:

- __Tilde__ (`~`)
- __Colon__ (`:`)
- __Semi-colon__ (`;`)
- __Pipe__ (`|`)

We'll read in the file [plant_detail_slice.pipe_delimit.text](https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.txt) into R as a tibble.
This pipe (`|`) delimited file was created with the [`readr::write_delim()`](/readr/write_delimiters.qmd#non-standard-delimiters) and only contains the header line plus the first 5 rows of the __all_plant_details.csv__ file.

### Non-standard delimited file contents

View the file contents before reading it as a __tibble__.

```{r}
readLines("https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.pipe_delimit.text")
```

### Read in non-standard delimited file file

Read in the pipe (`|`) delimited file with `readr::read_delim()` setting the delimiter to commas with `delim = " "`.

Additionally, we'll specify the option `show_col_types = FALSE` to quiet the column types message (more info covered in the [column types page](/readr/column_types.qmd)).

```{r}
readr::read_delim(
    file = "https://neof-workshops.github.io/Tidyverse/data/plant_detail_slice.pipe_delimit.text",
    delim = "|", 
    show_col_types = FALSE)
```