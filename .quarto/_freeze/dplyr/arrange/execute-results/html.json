{
  "hash": "1bda0ca7c7cdba7e7e623855f3f64d40",
  "result": {
    "markdown": "---\ntitle: \"Arrange\"\n---\n\n\nThe `dplyr::arrange()` function allows you to arrange the rows of a __tibble__.\n\n## Dataset\n\nFor demonstration we'll load and subset the `knz_bison` data from the [lterdatasampler package](/datasets/lterdatasampler.qmd) (hyperlink includes install instructions).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load package\nlibrary(\"lterdatasampler\")\n#Subset of knz_bison tibble for demonstration\nbison_tbl <- lterdatasampler::knz_bison |>\n    #Convert to tibble\n    tibble::as_tibble() |>\n    #Slice to choose rows by index\n    dplyr::slice(c(1,2,911,145,146,179,181,34,35)) |>\n    #Select to choose columns based on column names\n    dplyr::select(c(data_code,rec_year,animal_sex))\nbison_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  data_code rec_year animal_sex\n  <chr>        <dbl> <chr>     \n1 CBH01         1994 F         \n2 CBH01         1994 F         \n3 CBH01         1999 F         \n4 CBH01         1995 M         \n5 CBH01         1995 F         \n6 CBH01         1995 M         \n7 CBH01         1995 M         \n8 CBH01         1994 M         \n9 CBH01         1994 M         \n```\n:::\n:::\n\n\n## Numeric columns\n\nArrange the __tibble__ by rec_year:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbison_tbl |> dplyr::arrange(rec_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  data_code rec_year animal_sex\n  <chr>        <dbl> <chr>     \n1 CBH01         1994 F         \n2 CBH01         1994 F         \n3 CBH01         1994 M         \n4 CBH01         1994 M         \n5 CBH01         1995 M         \n6 CBH01         1995 F         \n7 CBH01         1995 M         \n8 CBH01         1995 M         \n9 CBH01         1999 F         \n```\n:::\n:::\n\n\n`dplyr::arrange()` will arrange the rows by the selected column in ascending fashion (lowest to highest). You can use the `desc()` function on columns you wan't to be ordered in descending fashion.\n\nArrange the __tibble__ by rec_year in descending fashion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbison_tbl |> dplyr::arrange(desc(rec_year))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  data_code rec_year animal_sex\n  <chr>        <dbl> <chr>     \n1 CBH01         1999 F         \n2 CBH01         1995 M         \n3 CBH01         1995 F         \n4 CBH01         1995 M         \n5 CBH01         1995 M         \n6 CBH01         1994 F         \n7 CBH01         1994 F         \n8 CBH01         1994 M         \n9 CBH01         1994 M         \n```\n:::\n:::\n\n\n## String columns\n\nStrings are order by alphabetical order.\n\nDefault is from A-Z (ascending).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbison_tbl |> dplyr::arrange(animal_sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  data_code rec_year animal_sex\n  <chr>        <dbl> <chr>     \n1 CBH01         1994 F         \n2 CBH01         1994 F         \n3 CBH01         1999 F         \n4 CBH01         1995 F         \n5 CBH01         1995 M         \n6 CBH01         1995 M         \n7 CBH01         1995 M         \n8 CBH01         1994 M         \n9 CBH01         1994 M         \n```\n:::\n:::\n\n\nSet it to descending will order it from Z-A.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbison_tbl |> dplyr::arrange(desc(animal_sex))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  data_code rec_year animal_sex\n  <chr>        <dbl> <chr>     \n1 CBH01         1995 M         \n2 CBH01         1995 M         \n3 CBH01         1995 M         \n4 CBH01         1994 M         \n5 CBH01         1994 M         \n6 CBH01         1994 F         \n7 CBH01         1994 F         \n8 CBH01         1999 F         \n9 CBH01         1995 F         \n```\n:::\n:::\n\n\n## Multiple columns\n\nMultiple columns can be used to arrange a __tibble__.\n\nThe priority of ordering is based on the order of the columns, from high to low priority.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbison_tbl |> dplyr::arrange(rec_year, animal_sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  data_code rec_year animal_sex\n  <chr>        <dbl> <chr>     \n1 CBH01         1994 F         \n2 CBH01         1994 F         \n3 CBH01         1994 M         \n4 CBH01         1994 M         \n5 CBH01         1995 F         \n6 CBH01         1995 M         \n7 CBH01         1995 M         \n8 CBH01         1995 M         \n9 CBH01         1999 F         \n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}