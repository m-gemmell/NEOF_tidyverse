{
  "hash": "6de895d3a51c08bb283dd71d964c9048",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tibble structure\"\nformat: html\n---\n\nUseful resource for MG: https://ssc.wisc.edu/sscc/pubs/R_intro/book/2-5-tibble-structure.html\n\nTibbles are formatted like a __data.frame__ but have some extra functions and terminology.\n\n## Format\n\nBelow is an example of a tibble (Dataset: [Sleep in mammals](/datasets/mammal_sleep.qmd)).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep <- readr::read_csv(file = \"mammals.csv\", show_col_types = FALSE)\nmammal_sleep[1:10,1:6]\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 6\n   species                 body_wt brain_wt non_dreaming dreaming total_sleep\n   <chr>                     <dbl>    <dbl>        <dbl>    <dbl>       <dbl>\n 1 Africanelephant        6654       5712           NA       NA           3.3\n 2 Africangiantpouchedrat    1          6.6          6.3      2           8.3\n 3 ArcticFox                 3.38      44.5         NA       NA          12.5\n 4 Arcticgroundsquirrel      0.92       5.7         NA       NA          16.5\n 5 Asianelephant          2547       4603            2.1      1.8         3.9\n 6 Baboon                   10.6      180.           9.1      0.7         9.8\n 7 Bigbrownbat               0.023      0.3         15.8      3.9        19.7\n 8 Braziliantapir          160        169            5.2      1           6.2\n 9 Cat                       3.3       25.6         10.9      3.6        14.5\n10 Chimpanzee               52.2      440            8.3      1.4         9.7\n```\n\n\n:::\n:::\n\n\nLet's go over some of its components:\n\n- Size info\n- Variables/columns\n- observations/rows\n\n### Size info\n\nAt the top of the __tibble__ it tells us the size.\nThe first number is the rows and the second is the columns.\n\nIn the above example we have:\n\n- 10 rows/observations\n- 6 columns/variables\n\n### Rows/observations\n\nAs in a __data.frame__ each observation is within its own row.\nThe contents of an observation/row is determined by your dataset and how you want to analyse or visualise it.\nThere are many ways to manipulate __tibble__ with the [dplyr](/dplyr/dplyr.qmd), [tidyr](/tidyr/tidyr.qmd), and other tidyverse packages. \n\n__Tibble__ rows do not have row names and you cannot/should not give them row names.\nThey are numbered/indexxed instead.\n\n### Variables/columns\n\nA __tibble__ will have a certain number of columns.\n\nEach column has a name that is at the top. \nFor example:\n\n- species\n- body_wt\n- brain_wt\n\nBelow the column/variable names is the data class/type of the column.\nAll the entries within a column will have the same data class.\nThese include:\n\n- __\\<int>__: [Integer](https://neof-workshops.github.io/R_j4c0xh/04-R_objects.html#numeric)\n- __\\<dbl>__: [Double](https://neof-workshops.github.io/R_j4c0xh/04-R_objects.html#numeric)\n- __\\<chr>__: [Character/String](https://neof-workshops.github.io/R_j4c0xh/04-R_objects.html#string)\n- __\\<fct>__: [Factor](https://neof-workshops.github.io/R_j4c0xh/04-R_objects.html#string)\n- __\\<lgl>__: [Logical](https://neof-workshops.github.io/R_j4c0xh/04-R_objects.html#string)\n- __\\<date>__: Date (MG ADD LINK TO INFO ABOUT DATE CLASS, MOST LIKELY IN LUBRIDATE SECTION)\n- __\\<list>__: List\n\nBelow is an example of a __tibble__ with a column for each of these classes.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 7\n  Integers   Doubles Characters Factors Logicals Dates   Lists    \n     <int>     <dbl> <chr>      <fct>   <lgl>    <date>  <list>   \n1      101     0.345 One        A       TRUE     1-01-20 <dbl [3]>\n2       21     3.14  sentence   B       TRUE     2-01-20 <dbl [3]>\n3        3    78.9   is         B       FALSE    3-01-20 <dbl [3]>\n4        0 20001.    enough     A       FALSE    4-01-20 <dbl [3]>\n```\n\n\n:::\n:::\n\n\nAbove you can see that when you view a __tibble__, by printing it or viewing it in an Rstudio tab, it will align the values in the columns in a easy to read manner.\nThis is especially useful for numeric (integers & doubles) columns where the numbers are aligned by place value.\nThis allows you to easily compare the size of numbers in the same column.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}