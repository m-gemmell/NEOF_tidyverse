---
title: "Arrange"
---

The `dplyr::arrange()` function allows you to arrange the rows of a __tibble__.

## Dataset

For demostration we'll load and subset the `knz_bison` data from the [lterdatasampler package](/datasets/lterdatasampler.qmd) (hyperlink includes install instructions).

```{r}
#Load package
library("lterdatasampler")
#Subset of knz_bison tibble for demonstration
bison_tbl <- tibble::as_tibble(lterdatasampler::knz_bison)[c(5,4,3,2,1,6,7,8,9,10)*100,]
bison_tbl
```

## Numeric columns

Arrange the __tibble__ by rec_year:

```{r}
dplyr::arrange(bison_tbl, rec_year)
```

`dplyr::arrange()` will arrange the rows by the selected column in ascending fashion (lowest to highest). You can use the `desc()` function on columns you wan't to be orded in descing fashion.

Arrange the __tibble__ by rec_year in descending fashion:

```{r}
dplyr::arrange(bison_tbl, desc(rec_year))
```

## String columns

Strings are order by alphabetical order.

Default is from A-Z (ascending).

```{r}
dplyr::arrange(bison_tbl, animal_sex)
```

Set it to descing will order it from Z-A.

```{r}
dplyr::arrange(bison_tbl, desc(animal_sex))
```
